"""Initial tables

Revision ID: dba6708623df
Revises: 
Create Date: 2025-08-12 19:44:17.356375+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dba6708623df'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('user_role', sa.String(), nullable=False),
    sa.Column('profile_photo_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('users_email_unique_when_active_idx', 'users', ['email'], unique=True, postgresql_where=sa.text('deleted_at IS NULL'))
    op.create_table('clients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trainer_user_id', sa.UUID(), nullable=False),
    sa.Column('client_user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('goal_description', sa.String(), nullable=True),
    sa.Column('private_notes', sa.Text(), nullable=True),
    sa.Column('invite_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['trainer_user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_user_id'),
    sa.UniqueConstraint('invite_code')
    )
    op.create_table('diet_plan_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trainer_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('plan_structure', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('parent_template_id', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_template_id'], ['diet_plan_templates.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['trainer_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_plan_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trainer_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('plan_structure', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('parent_template_id', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_template_id'], ['workout_plan_templates.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['trainer_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_feed',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('event_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assigned_diet_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('source_template_id', sa.UUID(), nullable=True),
    sa.Column('plan_details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_template_id'], ['diet_plan_templates.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assigned_workout_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('source_template_id', sa.UUID(), nullable=True),
    sa.Column('plan_details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_template_id'], ['workout_plan_templates.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('checkins',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('weight_kg', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('measurements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('progress_photo_url', sa.String(), nullable=True),
    sa.Column('subjective_scores', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('checked_in_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diet_logs',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('assigned_plan_id', sa.UUID(), nullable=False),
    sa.Column('meal_name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('logged_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_plan_id'], ['assigned_diet_plans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_logs',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('assigned_plan_id', sa.UUID(), nullable=False),
    sa.Column('performance_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('logged_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_plan_id'], ['assigned_workout_plans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_logs')
    op.drop_table('diet_logs')
    op.drop_table('checkins')
    op.drop_table('assigned_workout_plans')
    op.drop_table('assigned_diet_plans')
    op.drop_table('activity_feed')
    op.drop_table('workout_plan_templates')
    op.drop_table('diet_plan_templates')
    op.drop_table('clients')
    op.drop_index('users_email_unique_when_active_idx', table_name='users', postgresql_where=sa.text('deleted_at IS NULL'))
    op.drop_table('users')
    # ### end Alembic commands ###